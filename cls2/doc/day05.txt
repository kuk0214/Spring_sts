#day05

1. 리다이렉트 시키기
	
	스플이에서 리다이렉트 처리는
		
		1. 요청 처리함수의 매개변수에 
			RedirectView rv
			를 추가해두고
			
		2. rv에 리다이렉트 시킬 주소를 세팅한다.
			
			형식 ]
				
				rv.setUrl("주소");
				
		3. ModelAndView에 rv를 추가해준다.
		
			형식 ]
				
				mv.setView(rv);
				
-------------------------------------------------------------------------------------------------------------------------------------------

myBatis에서 연결된 질의명령을 하나의 질의 실행으로 연속해서 실행할 수 있다.
	단, insert, update, delete 명령에 한해서만 가능하다.

==> 우리가 회원을 추가하게 될 경우 
	적어도 하나의 질의명령은 서브질의로 만들어줘야한다.
	
	이때 불편한 점은 만들어진 서브질의의 결과를
	메인 질의명령을 실행한후 사용할 수 없다는 것이다.
	
	예 ]
		
		INSERT INTO
			member(mno, id, name, pw, mail, tel, ...)
		VALUES(
			(SELECT NVL(MAX(mno) + 1, 1001) FROM member),
			==> 회원번호의 경우는 회원의 데이터가 채워지는 순간 만들어줘야 하기 때문에
				서브질의로 처리를 했다.
				이 경우 정보 상입 질의 명령이 정상적으로 처리가 되더라도
				지금 가입한 회원의 회원번호를 알아내려면
				반드시 별도의 질의명령을 작성해서 다시 한번 데이터베이스에게 질의를 보내야 했었다.
				#{id}, #{name}, #{pw}, #{mail}, #{tel}, ...
		) 
		
	이런 불편함을 해소할 목적으로 생겨난 문법이 있다.
	
	형식 ]
	
		<insert id="질의명령아이디" parameterType="mVO">
			<selectKey keyProperty="mno" resultType="int" order="BEFORE">
				SELECT 
					NVL(MAX(mno) + 1, 1001)
				FROM 
					member
			</selectKey>
			==> selectKey에 정의된 질의명령을 실행해서
				mVO의 변수 mno에 채우는데
				이 질의명령은 실행을 메인질의명령인 insert 질의명령이 실행되기 전에 실행하세요.
			INSERT INTO
				member(mno, id, name, pw, mail, tel, ...)
			VALUES(
				#{mno}, #{id}, #{name}, #{pw}, #{mail}, #{tel}, ...
			)
		</insert>
		
	결과적으로 mVO는 컨트롤러에서 만들어질 것이고
	이 만들어진 mVO를 이용해서 dao 함수를 호출할 것이다.
	이때 질의명령의 실행결과로 mVO는 변경이 될 것이고
	함수 실행결과 mVO에는 회원번호가 채워지게 될 것이다.
	
======================================================================================================================================

myBatis에서 사용하는 조건 처리 명령

1. if
	
	형식 ]
		
		<if test="조건식">
			질의명령
		</if>
		
2. choose	: java의 switch case와 유사한 명령

	형식 ]
		
		<choose>
			<when test="조건식1">
				질의명령1
			</when>
			<when test="조건식2">
				질의명령2
			</when>
			<when test="조건식3">
				질의명령3
			</when>
			<otherwise>
				질의명령n
			</otherwise>
		</choose>
		
3. trim
	==> 질의명령의 특성상 조건식을 처리할 때
		첫번째 조건은 그냥 쓰면 되지만
		두번째 조건부터는
			AND 또는 OR
		의 연산자로 연결해야 한다.
		
		예 ]
			
			SELECT
				count(*)
			FROM
				member
			WHERE
				isShow = 'Y'
				AND id = #{id}
				AND pw = #{pw}
			;
			
			UPDATE
				member
			SET
				mail = #{mail},
				tel = #{tel}
			WHERE
				id = #{id}
			;
			
		이 문제를 해결하기 위한 기능이 trim 이다.
		
		형식 ]
		
			<trim prefix="WHERE" prefixOverrides="AND | OR">
			
			</trim>
		
		의미 ]
			
			prefix="WHERE" 				: 이 문장이 실행되는 순간 무조건 WHERE를 붙이세요.
			prefixOverrides="AND | OR"	: 다음 문장부터는 무조건 AND나 OR를 사용하는데
											첫번째 문장은 빼주세요.
			
			예 ]
			
				UPDATE
					member
				<trim prefix="SET" suffixOverrides=",">
					<if test="pw eq null">
						pw = #{pw},
					</if>
					<if test="mail eq null">
						mail = #{mail},
					</if>
					<if test="tel eq null">
						tel = #{tel},
					</if>
					<if test="ano eq 0">
						avt = #{ano},
					</if>
				</trim>
				WHERE
					id = #{id}
					
			예 ]
			
				SELECT
					empno, ename, sal
				FROM
					emp
				<trim prefix="WHERE" prefixOverrides="AND | OR">
					<if test="deptno neq null">
						AND deptno = #{dno}
					</if>
					<if test="job neq null">
						AND job = #{job}
					</if>
					<if test="comm neq 0">
						AND comm = #{comm}
					</if>
				</trim>
				
				==>
				
				1) 모든 데이터가 입력되는 경우
				WHERE
					deptno = #{dno}
					AND job = #{job}
					AND comm = #{comm}
					
				2) 직급만 입력되는 경우
				WHERE
					job = #{job}
					
				3) 부서번호와 커미션이 입력되는 경우
				WHERE
					deptno = #{dno}
					AND comm = #{comm}

4. set
	==> update 질의명령의 set 절을 자동 완성시켜주는 태그
	
		형식 ]
			<set>
				<if test="pw neq null">
					pw = #{pw},
				</if>
				<if test="mail neq null">
					mail = #{mail},
				</if>
				<if test="tel neq null">
					tel = #{tel},
				</if>
			</set>